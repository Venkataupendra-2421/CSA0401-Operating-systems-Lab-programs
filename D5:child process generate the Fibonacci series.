#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>

#define MAX_NUMS 20

int fibonacci(int n)
{
    if (n <= 1) return n;
    return fibonacci(n - 1) + fibonacci(n - 2);
}

int is_prime(int num)
{
    for (int i = 2; i <= num / 2; i++)
    {
        if (num % i == 0)
        {
            return 0;
        }
    }
    return 1;
}

int main()
{
    pid_t pid = fork();

    if (pid == 0)
    {
        // Child process
        printf("Child process: Generating the Fibonacci series\n");
        for (int i = 0; i < MAX_NUMS; i++)
        {
            printf("%d ", fibonacci(i));
        }
        printf("\n");
    }
    else if (pid > 0)
    {
        // Parent process
        int status;
        wait(&status);

        printf("Parent process: Printing prime numbers\n");
        for (int i = 2; i < MAX_NUMS; i++)
        {
            if (is_prime(i))
            {
                printf("%d ", i);
            }
        }
        printf("\n");
    }
    else
    {
        // Error creating the child process
        printf("Error creating the child process\n");
        return 1;
    }

    return 0;
}
